import numpy as np
import pandas as pd
import random

class Questions:
    """
    –ö–ª–∞—Å—Å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á
    """
    datasets_task_1 = None
    datasets_task_2 = None
    parameters = {'task_1': None,
                  'task_2': None}
    def __init__(self):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞
        """
        self.parameters = None

    def generate_dataset(self):
        dataset = pd.DataFrame(data=np.random.randint(1, 10, (6, 3)),
                               columns=['x1', 'x2', 'x3'])
        dataset['y'] = np.random.randint(0, 2, (6, 1))
        last_row = pd.DataFrame(data=np.random.randint(1, 10, (1, 3)),
                                columns=['x1', 'x2', 'x3'])
        dataset = dataset.append(last_row,
                                 ignore_index=True)
        dataset = dataset.fillna('')
        return dataset

    def generate_neighbor_number(self):
        neighbor_number = random.randint(2, 6)
        return neighbor_number

    def get_task_1(self):
        dataset = self.generate_dataset()
        neighbor_number = self.generate_neighbor_number()
        Questions.datasets_task_1 = dataset
        Questions.parameters['task_1'] = neighbor_number
        text_of_task = f'    –ü—Ä–æ–≤–µ—Å—Ç–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –æ–±—ä–µ–∫—Ç–æ–≤ \
–º–µ—Ç–æ–¥–æ–º {neighbor_number} –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ—Å–µ–¥–µ–π. –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ —Å—á–∏—Ç–∞—Ç—å –ø–æ –ï–≤–∫–ª–∏–¥–æ–≤–æ–π –º–µ—Ç—Ä–∏–∫–µ.'
        return text_of_task, dataset

    def get_task_2(self):
        dataset = self.generate_dataset()
        neighbor_number = self.generate_neighbor_number()
        Questions.datasets_task_2 = dataset
        Questions.parameters['task_2'] = neighbor_number
        text_of_task = f'    –ü—Ä–æ–≤–µ—Å—Ç–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ –æ–±—ä–µ–∫—Ç–æ–≤ \
–º–µ—Ç–æ–¥–æ–º {neighbor_number} –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ—Å–µ–¥–µ–π —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≤–µ—Å–æ–≤ ùë§(ùë•1, ùë•2) = 1 / ùëñ, –≥–¥–µ i ‚Äì –Ω–æ–º–µ—Ä —Å–æ—Å–µ–¥–∞ \
–ø–æ –±–ª–∏–∑–æ—Å—Ç–∏ –∫ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É. –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≤–∫–ª–∏–¥–æ–≤—É –º–µ—Ç—Ä–∏–∫—É.'
        return text_of_task, dataset

ques = Questions()
print(ques.get_task_1())